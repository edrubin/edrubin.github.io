geom_errorbar(aes(ymin = -1.96 * se, ymax = 1.96 * se))
theme_pander()
# Confidence intervals
ggplot(data = sim_dt[spec == 5], aes(x = iter)) +
geom_point(aes(y = coef)) +
geom_errorbar(aes(ymin = -1.96 * se, ymax = 1.96 * se)) +
theme_pander()
# Confidence intervals
ggplot(data = sim_dt[spec == 5], aes(x = iter)) +
geom_point(aes(y = coef)) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se)) +
theme_pander()
# Confidence intervals
ggplot(data = sim_dt[spec == 5], aes(x = iter)) +
geom_errorbar(color = "grey80",
aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se)) +
geom_point(aes(y = coef)) +
theme_pander()
setorder(sim_dt, coef)
# Confidence intervals
ggplot(data = sim_dt[spec == 5], aes(x = iter)) +
geom_errorbar(color = "grey80",
aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se)) +
geom_point(aes(y = coef)) +
theme_pander()
sim_dt[, 1:.GRP, by = spec]
?data.table
sim_dt[, order := .GRP, by = spec]
sim_dt
p_load(ggplot2, ggthemes, viridis)
setorder(sim_dt, coef)
sim_dt
sim_dt[, order := NULL]
sim_dt[, group := .GRP, by = spec]
sim_dt
DT = data.table(x=rep(c("b","a","c"),each=3), v=c(1,1,1,2,2,1,1,2,2), y=c(1,3,6), a=1:9, b=9:1)
DT
DT[, grp := .GRP, by=x]                # add a group counter
DT
sim_dt[, grp := .GRP, by = as.character(spec)]
sim_dt
sim_dt[, spec := as.character(spec)]
sim_dt[, grp := .GRP, by = spec]
sim_dt
sim_dt[,grp] %>% table
sim_dt[, grp := .GRP, by = iter]
sim_dt
sim_dt
sim_dt[, group := NULL]
sim_dt[, grp := NULL]
setorder(sim_dt, iter, spec)
sim_dt
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
ggplot(data = spec_dt, aes(x = iter)) +
geom_errorbar(color = "grey80",
aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se)) +
geom_point(aes(y = coef)) +
theme_pander()
spec_dt[, order := 1:.N]
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_errorbar(color = "grey80",
aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se)) +
geom_point(aes(y = coef)) +
theme_pander()
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_errorbar(color = "grey70",
aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se)) +
geom_point(aes(y = coef)) +
theme_pander()
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(color = "grey70",
aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se)) +
geom_point(aes(y = coef)) +
theme_pander()
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96) +
geom_point(aes(y = coef)) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander()
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef)) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander()
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef)) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "grey90") +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white") +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white", alpha = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_line(aes(y = coef), color = "white", alpha = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_line(aes(y = coef), color = "white", alpha = 0.8) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, shape = 14) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, shape = 14) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, shape = 6) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, shape = 4) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef),
color = "white", alpha = 0.8, shape = 4, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 2]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 1]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 3]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = abs(t_stat) > 1.96)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Summarize results ------------------------------------------------------------
lapply(X = 1:5, FUN = function(i) {
sim_dt[, spec == i] %>% quantile(probs = c(0.025, 0.5, 0.975)
})
# Summarize results ------------------------------------------------------------
lapply(X = 1:5, FUN = function(i) {
sim_dt[, spec == i] %>% quantile(probs = c(0.025, 0.5, 0.975))
})
# Summarize results ------------------------------------------------------------
lapply(X = 1:5, FUN = function(i) {
sim_dt[spec == i, coef] %>% quantile(probs = c(0.025, 0.5, 0.975))
})
# Summarize results ------------------------------------------------------------
lapply(X = 1:5, FUN = function(i) {
sim_dt[spec == i, coef] %>% quantile(probs = c(0.025, 0.5, 0.975))
sim_dt[spec == i, abs(t_stat) > 1.96] %>% mean()
})
# Summarize results ------------------------------------------------------------
lapply(X = 1:5, FUN = function(i) {
sim_dt[spec == i, coef] %>% quantile(probs = c(0.025, 0.5, 0.975)) %>% print()
sim_dt[spec == i, abs(t_stat) > 1.96] %>% mean() %>% print()
})
# Summarize results ------------------------------------------------------------
for (i in 1:5) {
sim_dt[spec == i, coef] %>% quantile(probs = c(0.025, 0.5, 0.975))
sim_dt[spec == i, abs(t_stat) > 1.96] %>% mean()
})
rm(i)
# Summarize results ------------------------------------------------------------
for (i in 1:5) {
sim_dt[spec == i, coef] %>% quantile(probs = c(0.025, 0.5, 0.975))
sim_dt[spec == i, abs(t_stat) > 1.96] %>% mean()
})
rm(i)
# Summarize results ------------------------------------------------------------
for (i in 1:5) {
sim_dt[spec == i, coef] %>% quantile(probs = c(0.025, 0.5, 0.975))
sim_dt[spec == i, abs(t_stat) > 1.96] %>% mean()
}
rm(i)
# Summarize results ------------------------------------------------------------
for (i in 1:5) {
sim_dt[spec == i, coef] %>% quantile(probs = c(0.025, 0.5, 0.975)) %>% print()
sim_dt[spec == i, abs(t_stat) > 1.96] %>% mean() %>% print()
}
rm(i)
# Summarize results ------------------------------------------------------------
for (i in 1:5) {
sim_dt[spec == i, coef] %>% quantile(probs = c(0.025, 0.5, 0.975)) %>%
print()
sim_dt[spec == i, abs(t_stat) > 1.96] %>% mean() %>%
print()
}
rm(i)
sim_dt
# Summarize results ------------------------------------------------------------
for (i in 1:5) {
sim_dt[spec == i, coef] %>% quantile(probs = c(0.025, 0.5, 0.975)) %>%
print()
sim_dt[spec == i, p_value < 0.05] %>% mean() %>%
print()
}
rm(i)
# Confidence intervals
spec_dt <- sim_dt[spec == 3]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = p_value < 0.05)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 4]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = p_value < 0.05)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = p_value < 0.05)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = p_value < 0.05)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.9)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = p_value < 0.05)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Run the simulation -----------------------------------------------------------
sim_dt <- lapply(
X = 1:1e3,
FUN = power_sim,
n_agents   = 30 #5,
n_working  = 12 #3,
n_weeks    = 12,
n_chats    = 10,
p_f_agent  = 0.7,
p_f_trt    = 0.6,
p_f_client = 0.5,
p_sale_ff  = 0.01, # 0.05, # 0.25,
p_sale_fm  = 0.01, # 0.04, # 0.2,
p_sale_mf  = 0.05, # 0.06, # 0.3,
p_sale_mm  = 0.05, # 0.06, # 0.3,
e_day      = 0.1,
e_week     = 0.1,
e_agent    = 0.1) %>% rbindlist()
# Run the simulation -----------------------------------------------------------
sim_dt <- lapply(
X = 1:1e3,
FUN = power_sim,
n_agents   = 30, #5,
n_working  = 12, #3,
n_weeks    = 12,
n_chats    = 10,
p_f_agent  = 0.7,
p_f_trt    = 0.6,
p_f_client = 0.5,
p_sale_ff  = 0.01, # 0.05, # 0.25,
p_sale_fm  = 0.01, # 0.04, # 0.2,
p_sale_mf  = 0.05, # 0.06, # 0.3,
p_sale_mm  = 0.05, # 0.06, # 0.3,
e_day      = 0.1,
e_week     = 0.1,
e_agent    = 0.1) %>% rbindlist()
# Run the simulation -----------------------------------------------------------
sim_dt <- mclapply(
X = 1:1e3,
FUN = power_sim,
n_agents   = 30, #5,
n_working  = 12, #3,
n_weeks    = 12,
n_chats    = 10,
p_f_agent  = 0.7,
p_f_trt    = 0.6,
p_f_client = 0.5,
p_sale_ff  = 0.01, # 0.05, # 0.25,
p_sale_fm  = 0.01, # 0.04, # 0.2,
p_sale_mf  = 0.05, # 0.06, # 0.3,
p_sale_mm  = 0.05, # 0.06, # 0.3,
e_day      = 0.1,
e_week     = 0.1,
e_agent    = 0.1,
mc.cores = 4) %>% rbindlist()
sim_dt
# Histogram: coefficients
ggplot(data = sim_dt[spec == 5], aes(x = coef)) +
geom_density() +
theme_pander()
# Histogram: t-statistics
ggplot(data = sim_dt[spec == 5], aes(x = t_stat)) +
geom_density() +
theme_pander()
# Scatter: t-statistics and coefficients
ggplot(data = sim_dt[spec == 5], aes(x = t_stat, y = coef)) +
geom_point(aes(color = p_value < 0.05)) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
# Confidence intervals
spec_dt <- sim_dt[spec == 5]
setorder(spec_dt, coef)
spec_dt[, order := 1:.N]
ggplot(data = spec_dt, aes(x = order)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = coef -1.96 * se, ymax = coef + 1.96 * se,
color = p_value < 0.05)) +
geom_point(aes(y = coef), color = "white", alpha = 0.8, size = 0.2) +
scale_color_manual(values = viridis(n = 2, end = 0.8)) +
theme_pander() +
theme(legend.position = "none")
setwd("/Users/edwardarubin/Downloads/Emancipation/")
