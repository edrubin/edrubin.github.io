scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top"),
color = guide_legend(title.position = "top"))
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
?guide_legend
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(.position = "top"),
color = guide_legend(.position = "top"))
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(.position = "top"),
color = guide_legend(.position = "top")) +
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top"),
color = guide_legend(title.position = "top")) +
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
?guide_legend
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top", keywidth = 7),
color = guide_legend(title.position = "top", keywidth = 7)) +
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top", keywidth = 4),
color = guide_legend(title.position = "top", keywidth = 4)) +
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top"),
color = guide_legend(title.position = "top")) +
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top", barwidth = 20),
color = guide_legend(title.position = "top", barwidth = 20)) +
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top", width = 20),
color = guide_legend(title.position = "top", width = 20)) +
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top", nrow = 1),
color = guide_legend(title.position = "top", nrow = 1)) +
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 3, keyheigh = 3),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 3, keyheigh = 3)) +
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual(values = the_colors) +
scale_color_manual(values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Setup ------------------------------------------------------------------------
# Options
options(stringsAsFactors = F)
# Packages
library(pacman)
p_load(readr, stringr, lubridate, data.table, magrittr,
ggplot2, ggalt, ggthemes, viridis, colormap, scales)
# Directories
dir_base <- "/Users/edwardarubin/Dropbox/Research/MyProjects/"
# dir_base <- "/home/ststaff/edward_rubin/bulk/"
dir_project <- paste0(dir_base, "GenderBiases/")
dir_power <- paste0(dir_project, "DataR/PowerSimulations/")
# More options
options(datatable.print.nrows = 10)
# Define my theme
my_theme  <- theme_pander() +
theme(
axis.ticks = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal")
# Load results -----------------------------------------------------------------
# Define the relevant simulation
sim <- "20170825215501"
# Create save directory
dir_save <- paste0(dir_project, "Figures/Power/Sim", sim)
dir.create(dir_save)
# Load the crosswalk
xwalk_dt <- readRDS(paste0(dir_power, "/xwalk", sim, ".rds"))
# Load the simulation
sim_dt <- readRDS(paste0(dir_power, "/sim", sim, ".rds"))
# Join crosswalk to simulation data
sim_dt %<>% merge(xwalk_dt, by = "row_id")
# Summarize simulations --------------------------------------------------------
# Summarize simulations (5% level) by the variables: n_agents, n_weeks, p_disc,
# p_f_trt, diff_chat, type, and spec
power_dt <- sim_dt[, .(
power = mean(p_value < 0.05),
coef_mean = mean(coef),
coef_se = sd(coef) / sqrt(.N)
), by = .(n_agents, n_weeks, p_disc, p_f_trt, diff_chat, type, spec)]
# Plot coefficients for a set of parameters ------------------------------------
# Create data
coef_dt <- sim_dt[type == "sale_prob" & spec == 4 & p_f_trt == 0.5
& diff_chat == 0 & p_disc == 0.01 & n_weeks == 12]
coef_dt[, n_agents_fac := factor(n_agents, ordered = T)]
coef_dt$n_agents_fac <-
factor(coef_dt$n_agents_fac, levels = rev(levels(coef_dt$n_agents_fac)))
# Colors to match the grid
color_dt <- coef_dt[, .(power = mean(p_value < 0.05)), by = n_agents]
the_colors <- viridis(1e3, option = "B",
direction = -1)[round(1e3 * color_dt[, power], 0)] %>% rev()
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
my_theme +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Est. trt. effect") +
ylab("Density") +
my_theme +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Est. trt. effect") +
ylab("") +
my_theme +
theme(y.axis.text = element_blank()) +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
?theme
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Est. trt. effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank()) +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Est. trt. effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right") +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Est. trt. effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Est. trt. effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", nrow = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Est. trt. effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", ncol = 1, keywidth = 2, keyheigh = 2),
color = guide_legend(title.position = "top", ncol = 1, keywidth = 2, keyheigh = 2)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Est. trt. effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top", ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Plot densities by number of agents
ggplot(data = coef_dt, aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Estimated treatment effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top", ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
gg_density <- ggplot(data = coef_dt,
aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Estimated treatment effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top",
ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top",
ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Save
ggsave(plot = gg_density
filename = paste0("coefDensities.png"),
path = dir_save,
width = 16 * 0.55, height = 10 * 0.55)
ggsave(plot = gg_density,
filename = "coefDensities.png",
path = dir_save,
width = 16 * 0.55, height = 10 * 0.55)
?guide_legend
gg_density <- ggplot(data = coef_dt,
aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Estimated treatment effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", title.hjust = 0.5,
ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top", title.hjust = 0.5,
ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Save
ggsave(plot = gg_density,
filename = "coefDensities.png",
path = dir_save,
width = 16 * 0.55, height = 10 * 0.55)
ggplot(data = coef_dt,
aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Estimated treatment effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", title.hjust = 0,
ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top", title.hjust = 0,
ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
ggplot(data = coef_dt,
aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Estimated treatment effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", title.hjust = 0,
ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top", title.hjust = 0,
ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
ggplot(data = coef_dt,
aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
xlab("Estimated treatment effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", title.hjust = 1,
ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top", title.hjust = 1,
ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
ggplot(data = coef_dt,
aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_hline(yintercept = 0, color = "black") +
geom_density(alpha = 0.7) +
xlab("Estimated treatment effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", title.hjust = 0
ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top", title.hjust = 0
ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
ggplot(data = coef_dt,
aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_hline(yintercept = 0, color = "black") +
geom_density(alpha = 0.7) +
xlab("Estimated treatment effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", title.hjust = 0.5,
ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top", title.hjust = 0.5,
ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
ggplot(data = coef_dt,
aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
geom_hline(yintercept = 0, color = "black") +
xlab("Estimated treatment effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", title.hjust = 0.5,
ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top", title.hjust = 0.5,
ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
gg_density <- ggplot(data = coef_dt,
aes(coef, fill = n_agents_fac, color = n_agents_fac)) +
geom_vline(xintercept = -0.01, color = "black") +
geom_density(alpha = 0.7) +
# geom_hline(yintercept = 0, color = "black") +
xlab("Estimated treatment effect") +
ylab("") +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = "right",
legend.direction = "vertical") +
guides(
fill = guide_legend(title.position = "top", title.hjust = 0.5,
ncol = 1, keywidth = 2.5, keyheigh = 2.5),
color = guide_legend(title.position = "top", title.hjust = 0.5,
ncol = 1, keywidth = 2.5, keyheigh = 2.5)) +
scale_fill_manual("Number of agents", values = the_colors) +
scale_color_manual("Number of agents", values = the_colors)
# Save
ggsave(plot = gg_density,
filename = "coefDensities.png",
path = dir_save,
width = 16 * 0.55, height = 10 * 0.55)
# Load two packages
library(pacman)
p_load(rmarkdown)
# Set working directory
setwd("/Users/edwardarubin/Dropbox/Websites/edrubin.github.io/")
# Find files
the_files <- grep("[\\.][R][m][d]", dir(), value = T)
# Compile the pages
for (i in the_files) {
# Run the render script on the ith file
render_site(i)
# Clear memory
# rm(list = setdiff(ls(), c("i", "the_files")))
# # Unload all packages except pacman and rmarkdown
# p_unload(pacman, rmarkdown, negate = T)
}
