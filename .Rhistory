values = c("longdash", "twodash"),
labels = c("PG&E", "SoCalGas"))
# Save
# save_beamer("allowanceSeries")
save_paper(gg_tmp, "allowanceSeries", 9, 5.6)
embed_fonts(paste0(dir_figures, "allowanceSeries.pdf"))
rm(gg_tmp); gc()
allow_dt <- readRDS(paste0(dir_pres, "ggplotAllowanceSeries.rds"))$data
dir_pres
price_dt <- readRDS(paste0(dif_figures, "ggplotPriceSeries.rds"))$data
# The plot
gg_tmp <- ggplot(data = price_dt) +
geom_line(aes(x = month_date, y = charge_base, color = utility,
linetype = "1")) +
geom_line(aes(x = month_date, y = charge_excess, color = utility,
linetype = "2")) +
xlab("") +
ylab("Price (USD per therm)") +
ylim(c(0, max(price_dt$charge_excess))) +
scale_color_manual("Utility:",
values = c("#6A1B9A", "#FF5722"),
labels = c("PG&E", "SoCalGas")) +
scale_linetype_manual("Price:",
values = c("solid", "twodash"),
labels = c("Baseline", "Excess")) +
theme(legend.box = "horizontal")
price_dt <- readRDS(paste0(dif_figures, "ggplotPriceSeries.rds"))$data
price_dt <- readRDS(paste0(dir_figures, "ggplotPriceSeries.rds"))$data
gg_tmp <- ggplot(data = price_dt) +
geom_line(aes(x = month_date, y = charge_base, color = utility,
linetype = "1")) +
geom_line(aes(x = month_date, y = charge_excess, color = utility,
linetype = "2")) +
xlab("") +
ylab("Price (USD per therm)") +
ylim(c(0, max(price_dt$charge_excess))) +
scale_color_manual("Utility:",
values = c("#6A1B9A", "#FF5722"),
labels = c("PG&E", "SoCalGas")) +
scale_linetype_manual("Price:",
values = c("solid", "twodash"),
labels = c("Baseline", "Excess")) +
theme(legend.box = "horizontal")
gg_tmp
# Figure: PG&E and SoCal price regime series -----------------------------------
# Load data
price_dt <- readRDS(paste0(dir_figures, "ggplotPriceSeries.rds"))$data
# The plot
gg_tmp <- ggplot(data = price_dt) +
geom_line(aes(x = month_date, y = charge_base, color = utility,
linetype = "1")) +
geom_line(aes(x = month_date, y = charge_excess, color = utility,
linetype = "2")) +
xlab("") +
ylab("Price (USD per therm)") +
ylim(c(0, max(price_dt$charge_excess))) +
scale_color_manual("Utility:",
values = c("#6A1B9A", "#FF5722"),
labels = c("PG&E", "SoCalGas")) +
scale_linetype_manual("Price:",
values = c("solid", "twodash"),
labels = c("Baseline", "Excess")) +
theme(legend.box = "horizontal")
# Save
# save_beamer("priceRegimeSeries")
save_paper(gg_tmp, "priceRegimeSeries", 9, 5.6)
rm(list = c("price_dt", "gg_tmp"))
gc()
allow_dt <- readRDS(paste0(dir_figures, "ggplotAllowanceSeries.rds"))$data
# Add end of month
allow_dt[, month_end :=
ceiling_date(month_date, unit = "month", change_on_boundary = T) - 1]
# Copy the month's allowance (horizonal line within month)
allow_dt[, allow_end := allow_ind]
# Copy dataset for movement between months
copy_dt <- copy(allow_dt)
copy_dt[, month_date := month_end]
setorder(copy_dt, utility, month_date)
copy_dt[, allow_end := shift(allow_ind, 1L, NA, "lead"), by = utility]
# Bind datasets
allow_dt <- rbindlist(list(allow_dt, copy_dt)); rm(copy_dt); gc()
setorder(allow_dt, utility, month_date)
# Plot
gg_tmp <- ggplot(data = allow_dt,
aes(color = utility, linetype = utility)) +
geom_segment(aes(x = month_date, xend = month_end,
y = allow_ind, yend = allow_end)) +
xlab("") +
ylab("Daily allowance (therms)") +
ylim(c(0, max(allow_dt$allow_ind))) +
scale_color_manual("",
values = c("#6A1B9A", "#FF5722"),
labels = c("PG&E", "SoCalGas")) +
scale_linetype_manual("",
values = c("longdash", "twodash"),
labels = c("PG&E", "SoCalGas"))
save_paper(gg_tmp, "allowanceSeries", 9, 5.6)
embed_fonts(paste0(dir_figures, "allowanceSeries.pdf"))
rm(gg_tmp); gc()
library(rgdal)
library(broom)
ca_shp <- readOGR(
dsn = paste0(dir_spatial, "CA_Building_Standards_Climate_Zones"),
layer = "CA_Building_Standards_Climate_Zones")
p_load(data.table, magrittr, lubridate, ggplot2, extrafont, Cairo, rmapshaper)
ca_shp %<>% ms_simplify(keep = 0.1, keep_shapes = T)
ca_dt <- tidy(ca_shp, group = "Zone")
gg_tmp <- ggplot(data = ca_dt, aes(x = long, y = lat, group = group)) +
geom_path(size = 0.2) +
xlab("") + ylab("") +
theme(axis.text = element_blank()) +
coord_quickmap()
save_paper(gg_tmp, "climateZones")
themes
gg_tmp
gg_tmp + NULL
# Setup ------------------------------------------------------------------------
# Options
options(stringsAsFactors = F)
options(bitmapType = "cairo")
# Packages
library(pacman)
p_load(data.table, magrittr, lubridate, ggplot2, extrafont, Cairo, rmapshaper)
# Directories
dir_project <- "/Users/edwardarubin/Dropbox/Research/MyProjects/NaturalGas/"
dir_csv     <- paste0(dir_project, "DataCsv/")
dir_spatial <- paste0(dir_project, "DataSpatial/")
dir_figures <- paste0(dir_project, "Text/PaperJob2017/Figures/")
# dir_figures <- paste0(dir_project, "Presentations/Beamer20170526AERE/Figures/")
# Define colors
dark_grey <- "#7D7D7D"
light_grey <- "#C7C7C7"
# My ggplot themes
theme_beamer <- theme_bw() + theme(
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = 'bottom',
legend.key = element_blank(),
panel.grid = element_blank(),
text = element_text(family = "Times", color = "black", size = 16),
title = element_text(size = 18),
legend.text = element_text(size = 18),
legend.key.size = unit(2.5, "cm"))
theme_paper <- theme_bw() + theme(
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = 'bottom',
legend.key = element_blank(),
panel.grid = element_blank(),
text = element_text(family = "Bitstream Charter", color = "black", size = 11),
axis.text = element_text(color = "black"),
title = element_text(size = 12),
legend.text = element_text(size = 11),
legend.key.size = unit(1.5, "cm"))
# My own save functions
save_beamer <- function(gg_tmp, name, width = 16 * 0.7, height = 10 * 0.7, themes = NULL) {
ggsave(filename = paste0(name, ".pdf"),
path = dir_figures,
plot = gg_tmp + theme_beamer + themes,
width = width,
height = height,
device = cairo_pdf)
embed_fonts(paste0(dir_figures, name, ".pdf"))
}
save_paper <- function(gg_tmp, name, width = 6.4, height = 4, themes = NULL) {
ggsave(filename = paste0(name, ".pdf"),
path = dir_figures,
plot = gg_tmp + theme_paper + themes,
width = width,
height = height,
device = cairo_pdf)
embed_fonts(paste0(dir_figures, name, ".pdf"))
}
gg_tmp <- ggplot(data = ca_dt, aes(x = long, y = lat, group = group)) +
geom_path(size = 0.2) +
xlab("") + ylab("") +
coord_quickmap()
# Save
# save_beamer("climateZones")
save_paper(gg_tmp, "climateZones", 5.6, 9, themes = theme(axis.text = element_blank()))
save_paper(gg_tmp, "climateZones", 5.6, 8.5, themes = theme(axis.text = element_blank()))
save_paper(gg_tmp, "climateZones", 5.6, 8, themes = theme(axis.text = element_blank()))
save_paper(gg_tmp, "climateZones", 5.6, 7.5, themes = theme(axis.text = element_blank()))
# Figure: Climate zone map -----------------------------------------------------
# Load additional packages
library(rgdal)
library(broom)
# Load shapefile of climate zones
ca_shp <- readOGR(
dsn = paste0(dir_spatial, "CA_Building_Standards_Climate_Zones"),
layer = "CA_Building_Standards_Climate_Zones")
ca_shp %<>% ms_simplify(keep = 0.1, keep_shapes = T)
# Tidy to plot
ca_dt <- tidy(ca_shp, group = "Zone")
# Plot
gg_tmp <- ggplot(data = ca_dt, aes(x = long, y = lat, group = group)) +
geom_path(size = 0.2) +
xlab("") + ylab("") +
coord_quickmap()
# Save
# save_beamer("climateZones")
save_paper(gg_tmp, "climateZones", 6, 8, themes = theme(axis.text = element_blank()))
rm(list = c("ca_shp", "gg_tmp"))
p_load(rgdal, broom, rgeos, maptools)
rm(list = c("ca_shp", "gg_tmp"))
p_load(rgdal, broom, rgeos, maptools)
zip_shp <- readOGR(
dsn = paste0(dir_spatial, "CaliforniaZipCodes"),
layer = "CaliforniaZipCodes")
zip_shp <- readOGR(
dsn = paste0(dir_spatial, "CaliforniaZipCodes"),
layer = "CaliforniaZipCodes")
common_dt <- fread(paste0(dir_csv, "commonCityZips.csv"))
common_dt[, zip := as.character(zip)]
zip_shp %<>% subset(ZIP_CODE %in% common_dt$zip)
zip_dt <- tidy(zip_shp, region = "ZIP_CODE") %>% data.table()
zip_dt %<>% merge(y = common_dt, by.x = "id", by.y = "zip",
all.x = T, all.y = F, sort = F)
zip_dt[pge == F & socal == F, utility := "neither"]
zip_dt[pge == T & socal == F, utility := "pge"]
zip_dt[pge == F & socal == T, utility := "socal"]
zip_dt[pge == T & socal == T, utility := "both"]
# Cities' centers
city_centers <- zip_dt[, list(long = mean(long), lat = mean(lat)), by = city]
# More adjustements
city_centers[city == "Del Rey", lat := lat + 0.03]
city_centers[city == "Fellows", lat := lat + 0.10]
city_centers[city == "Tehachapi", lat := lat - 0.03]
city_centers[city == "Paso Robles", lat := lat + 0.01]
city_centers[city == "Templeton", lat := lat - 0.1]
# Drop "neither" and order
zip_dt <- zip_dt[utility != "neither"]
zip_dt[, utility_fac := factor(utility,
levels = c("pge", "both"),
ordered = T,
labels = c("Only PG&E", "Both PG&E and SoCalGas"))]
# Plot
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac)) +
geom_path(color = "grey90", size = 0.1, alpha = 0.9) +
xlab("") + ylab("") +
# scale_fill_manual("Utility presence:", values = c("#4DB6AC", "#B0BEC5"),
scale_fill_manual("Utilities serving the zip code:",
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
geom_text(data = city_centers, family = "Roboto", size = 5.5,
# geom_text(data = city_centers, family = "Charter", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
coord_quickmap() +
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac)) +
geom_path(color = "grey90", size = 0.1, alpha = 0.9) +
xlab("") + ylab("") +
# scale_fill_manual("Utility presence:", values = c("#4DB6AC", "#B0BEC5"),
scale_fill_manual("Utilities serving the zip code:",
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
geom_text(data = city_centers, family = "Roboto", size = 5.5,
# geom_text(data = city_centers, family = "Charter", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
coord_quickmap()
gg_tmp
save_paper(gg_tmp, "studyArea", width = 7, height = 7,
themes = theme(axis.text = element_blank(), legend.key.size = unit(1, "cm")))
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac)) +
geom_path(color = "grey90", size = 0.1, alpha = 0.9) +
xlab("") + ylab("") +
# scale_fill_manual("Utility presence:", values = c("#4DB6AC", "#B0BEC5"),
scale_fill_manual("Utilities serving the zip code:",
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
# geom_text(data = city_centers, family = "Roboto", size = 5.5,
geom_text(data = city_centers, family = "Bitstream Charter", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
coord_quickmap()
# Save
# save_beamer("studyArea", width = 14 * 0.7, height = 14 * 0.7)
save_paper(gg_tmp, "studyArea", width = 7, height = 7,
themes = theme(axis.text = element_blank(), legend.key.size = unit(1, "cm")))
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac)) +
geom_path(color = "grey90", size = 0.1, alpha = 0.9) +
xlab("") + ylab("") +
# scale_fill_manual("Utility presence:", values = c("#4DB6AC", "#B0BEC5"),
scale_fill_manual("Utilities serving the zip code:",
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
# geom_text(data = city_centers, family = "Roboto", size = 5.5,
geom_text(data = city_centers, family = "Bitstream Charter", size = 4,
aes(x = long, y = lat, label = city, group = city)) +
coord_quickmap()
# Save
# save_beamer("studyArea", width = 14 * 0.7, height = 14 * 0.7)
save_paper(gg_tmp, "studyArea", width = 7.5, height = 7.5,
themes = theme(axis.text = element_blank(), legend.key.size = unit(1, "cm")))
rm(list = c("zip_shp", "zip_dt", "common_dt", "city_centers", "gg_tmp"))
# Figure: Common zip code map --------------------------------------------------
# Load additional packages
p_load(rgdal, broom, rgeos, maptools)
# Load the zip code shapefile
zip_shp <- readOGR(
dsn = paste0(dir_spatial, "CaliforniaZipCodes"),
layer = "CaliforniaZipCodes")
# Load the common cities CSV
common_dt <- fread(paste0(dir_csv, "commonCityZips.csv"))
# Convert zips to character
common_dt[, zip := as.character(zip)]
# Take subset of shapefile for zip codes that are in the common cities file
zip_shp %<>% subset(ZIP_CODE %in% common_dt$zip)
# Convert to data.table
zip_dt <- tidy(zip_shp, region = "ZIP_CODE") %>% data.table()
# Join information
zip_dt %<>% merge(y = common_dt, by.x = "id", by.y = "zip",
all.x = T, all.y = F, sort = F)
# Add column combining utilities' presence
zip_dt[pge == F & socal == F, utility := "neither"]
zip_dt[pge == T & socal == F, utility := "pge"]
zip_dt[pge == F & socal == T, utility := "socal"]
zip_dt[pge == T & socal == T, utility := "both"]
# Cities' centers
city_centers <- zip_dt[, list(long = mean(long), lat = mean(lat)), by = city]
# More adjustements
city_centers[city == "Del Rey", lat := lat + 0.03]
city_centers[city == "Fellows", lat := lat + 0.10]
city_centers[city == "Tehachapi", lat := lat - 0.03]
city_centers[city == "Paso Robles", lat := lat + 0.01]
city_centers[city == "Templeton", lat := lat - 0.1]
# Drop "neither" and order
zip_dt <- zip_dt[utility != "neither"]
zip_dt[, utility_fac := factor(utility,
levels = c("pge", "both"),
ordered = T,
labels = c("Only PG&E", "Both PG&E and SoCalGas"))]
# Plot
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac)) +
geom_path(color = "grey90", size = 0.1, alpha = 0.9) +
xlab("") + ylab("") +
# scale_fill_manual("Utility presence:", values = c("#4DB6AC", "#B0BEC5"),
scale_fill_manual("Utilities serving the zip code:",
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
# geom_text(data = city_centers, family = "Roboto", size = 5.5,
geom_text(data = city_centers, family = "Bitstream Charter", size = 4,
aes(x = long, y = lat, label = city, group = city)) +
coord_quickmap()
# Save
# save_beamer("studyArea", width = 14 * 0.7, height = 14 * 0.7)
save_paper(gg_tmp, "studyArea", width = 7, height = 7,
themes = theme(axis.text = element_blank(), legend.key.size = unit(1, "cm")))
rm(list = c("zip_shp", "zip_dt", "common_dt", "city_centers", "gg_tmp"))
gc()
p_load(rgdal, broom, rgeos, maptools, viridis, rmapshaper)
# Load the zip code shapefile
zip_shp <- readOGR(
dsn = paste0(dir_spatial, "CaliforniaZipCodes"),
layer = "CaliforniaZipCodes")
# Take union of the zip codes
ca_shp <- gUnaryUnion(zip_shp)
# Load the zip code and utility list
utility_dt <- fread(paste0(dir_csv, "utilityZipCodeMap.csv"))
# Take subsets for each set of utilities and then take union
pge_shp <- subset(zip_shp,
ZIP_CODE %in% utility_dt[pge == T & socal == F, zip]) %>% gUnaryUnion()
socal_shp <- subset(zip_shp,
ZIP_CODE %in% utility_dt[pge == F & socal == T, zip]) %>% gUnaryUnion()
both_shp <- subset(zip_shp,
ZIP_CODE %in% utility_dt[pge == T & socal == T, zip]) %>% gUnaryUnion()
# Reduce the resolution of each shapefile
pge_simple <- ms_simplify(pge_shp, keep = 0.01)
socal_simple <- ms_simplify(socal_shp, keep = 0.01)
both_simple <- ms_simplify(both_shp, keep = 0.01)
ca_simple <- ms_simplify(ca_shp, keep = 0.01, keep_shapes = T)
# Convert shapefiles to data tables
pge_dt <- pge_shp %>% tidy(region = "ZIP_CODE") %>% data.table()
socal_dt <- socal_shp %>% tidy(region = "ZIP_CODE") %>% data.table()
both_dt <- both_shp %>% tidy(region = "ZIP_CODE") %>% data.table()
ca_dt <- ca_shp %>% tidy(region = "ZIP_CODE") %>% data.table()
pge_sdt <- pge_simple %>% tidy(region = "ZIP_CODE") %>% data.table()
socal_sdt <- socal_simple %>% tidy(region = "ZIP_CODE") %>% data.table()
both_sdt <- both_simple %>% tidy(region = "ZIP_CODE") %>% data.table()
ca_sdt <- ca_simple %>% tidy(region = "ZIP_CODE") %>% data.table()
save_paper(gg_tmp, "serviceAreas", width = 7, height = 7,
themes = theme(axis.text = element_blank(), legend.key.size = unit(1, "cm")))
gg_tmp <- ggplot(data = pge_sdt, aes(x = long, y = lat, group = group)) +
geom_polygon(data = pge_sdt, aes(fill = "1")) +
geom_polygon(data = socal_sdt, aes(fill = "2")) +
geom_polygon(data = both_sdt, aes(fill = "3")) +
geom_path(data = ca_sdt, size = 0.3, color = "grey40") +
xlab("") + ylab("") +
scale_fill_manual("Utility presence:",
values = c("#ffc107", "#310769", "#e40045"),
labels = c("PG&E", "SoCalGas", "PG&E and SoCalGas")) +
coord_quickmap()
save_paper(gg_tmp, "serviceAreas", width = 7, height = 7,
themes = theme(axis.text = element_blank(), legend.key.size = unit(1, "cm")))
save_paper(gg_tmp, "serviceAreas", width = 6, height = 7,
themes = theme(axis.text = element_blank(), legend.key.size = unit(1, "cm")))
# Setup ------------------------------------------------------------------------
# Options
options(stringsAsFactors = F)
options(bitmapType = "cairo")
# Packages
library(pacman)
p_load(data.table, magrittr, lubridate, ggplot2, extrafont, Cairo, rmapshaper)
# Directories
dir_project <- "/Users/edwardarubin/Dropbox/Research/MyProjects/NaturalGas/"
dir_csv     <- paste0(dir_project, "DataCsv/")
dir_spatial <- paste0(dir_project, "DataSpatial/")
dir_figures <- paste0(dir_project, "Text/PaperJob2017/Figures/")
# dir_figures <- paste0(dir_project, "Presentations/Beamer20170526AERE/Figures/")
# Define colors
dark_grey <- "#7D7D7D"
light_grey <- "#C7C7C7"
# My ggplot themes
theme_beamer <- theme_bw() + theme(
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = 'bottom',
legend.key = element_blank(),
panel.grid = element_blank(),
text = element_text(family = "Times", color = "black",
size = 16),
title = element_text(size = 18),
legend.text = element_text(size = 18),
legend.key.size = unit(2.5, "cm"))
theme_paper <- theme_bw() + theme(
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = 'bottom',
legend.key = element_blank(),
panel.grid = element_blank(),
text = element_text(family = "Bitstream Charter", color = "black",
size = 11),
axis.text = element_text(color = "black"),
title = element_text(size = 12),
legend.text = element_text(size = 11),
legend.key.size = unit(1.5, "cm"))
# My own save functions
save_beamer <- function(gg_tmp, name, width = 16 * 0.7, height = 10 * 0.7,
themes = NULL) {
ggsave(filename = paste0(name, ".pdf"),
path = dir_figures,
plot = gg_tmp + theme_beamer + themes,
width = width,
height = height,
device = cairo_pdf)
embed_fonts(paste0(dir_figures, name, ".pdf"))
}
save_paper <- function(gg_tmp, name, width = 6.4, height = 4,
themes = NULL) {
ggsave(filename = paste0(name, ".pdf"),
path = dir_figures,
plot = gg_tmp + theme_paper + themes,
width = width,
height = height,
device = cairo_pdf)
embed_fonts(paste0(dir_figures, name, ".pdf"))
}
henry_dt <- fread(paste0(dir_csv, "naturalGasPricesHenryHub.csv"))
# Change names
setnames(henry_dt, c("date", "price"))
# Format variables
henry_dt[, `:=`(
# Convert date to actual date format
date = mdy(date),
# Convert price from dollars per million Btu to thm (divide by 10)
price = price / 10
)]
# Plot the Henry Hub spot price over time
gg_tmp <- ggplot(data = henry_dt,
aes(x = date, y = price)) +
geom_point(shape = 20, color = "grey30", size = 1, alpha = 0.9) +
xlab("Date") +
ylab("Natural gas spot price (USD per therm)") +
ylim(c(0, max(henry_dt$price)))
gg_tmp
gg_tmp <- ggplot(data = henry_dt,
aes(x = date, y = price)) +
geom_point(shape = 20, color = "grey30", size = 0.8, alpha = 0.9) +
xlab("Date") +
ylab("Natural gas spot price (USD per therm)") +
ylim(c(0, max(henry_dt$price)))
# Save
# save_beamer("priceSpot")
save_paper(gg_tmp, "priceSpot", 9, 5.6)
# Load two packages
library(pacman)
p_load(rmarkdown)
# Set working directory
setwd("/Users/edwardarubin/Dropbox/Websites/edrubin.github.io/")
# Find files
the_files <- grep("[\\.][R][m][d]", dir(), value = T)
# Compile the pages
for (i in the_files) {
# Run the render script on the ith file
render_site(i)
# Clear memory
# rm(list = setdiff(ls(), c("i", "the_files")))
# # Unload all packages except pacman and rmarkdown
# p_unload(pacman, rmarkdown, negate = T)
}
render_site("research.Rmd")
render_site("research.Rmd")
render_site("research.Rmd")
render_site("research.Rmd")
